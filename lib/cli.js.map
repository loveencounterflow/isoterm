{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/cli.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'XTERM'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nCP                        = require 'child_process'\n#...........................................................................................................\nxterm_path                = PATH.resolve PATH.join __dirname, '../xterm'\nstart_path                = PATH.resolve PATH.join __dirname, '../app/start.js'\nH                         = require './helpers'\nport_pattern              = /^33[0-9]{3}$/\n# port_pattern              = /^8081$/\nGUY                       = require 'guy'\n\n\n#-----------------------------------------------------------------------------------------------------------\nget_screen_dimensions = ->\n  [ width, height, ] = ( require '@vamidicreations/screenres' ).get()\n  return { width, height, }\n\n#-----------------------------------------------------------------------------------------------------------\nparse_arguments = ->\n  if process.argv.length isnt 2\n    warn \"^445-1^ this command doesn't accept parameters; terminating\"\n    process.exit 1\n\n#-----------------------------------------------------------------------------------------------------------\nstart_server = -> new Promise ( resolve, reject ) =>\n  host                    = '127.0.0.1'\n  port                    = await H.find_free_port { port: port_pattern, fallback: null, }\n  process.env.xxterm_host = host\n  process.env.xxterm_port = port\n  process.chdir xterm_path\n  require start_path\n  #.........................................................................................................\n  return resolve { server: process, host, port, }\n\n#-----------------------------------------------------------------------------------------------------------\nstart_browser = ( cfg ) -> new Promise ( resolve, reject ) =>\n  defaults    = { server: null, host: null, port: null, }\n  { server\n    host\n    port }    = { defaults..., cfg..., }\n  cmd         = 'chromium'\n  ### TAINT get address from `start_server()` ###\n  address     = \"http://#{host}:#{port}\"\n  screen      = get_screen_dimensions()\n  ### TAINT must ensure address does not contain literal quotes ###\n  # parameters  = [ \"--window-position=0,0\", \"--window-size=#{screen.width},#{screen.height}\", \"--app='#{address}'\", ]\n  parameters  = [ \"--window-position=0,0\", \"--window-size=#{screen.width},#{screen.height}\", \"#{address}\", ]\n  # parameters  = [ \"--app=#{address}\", ]\n  cp_cfg      = { detached: false, }\n  help '^cli/browser@445-18^', \"spawning #{cmd} #{parameters.join ' '}\"\n  browser     = CP.spawn cmd, parameters, cp_cfg\n  browser.on 'error', ( error ) => warn '^cli/browser@445-19^', error\n  browser.on 'close',       => whisper '^cli/browser@445-20^', 'close'\n  browser.on 'disconnect',  => whisper '^cli/browser@445-21^', 'disconnect'\n  browser.on 'error',       => whisper '^cli/browser@445-22^', 'error'\n  browser.on 'message',     => whisper '^cli/browser@445-23^', 'message'\n  browser.on 'spawn',       => whisper '^cli/browser@445-24^', 'spawn'\n  browser.on 'exit',        => whisper '^cli/browser@445-25^', 'exit'; process.exit 0\n  #.........................................................................................................\n  GUY.process.on_exit ->\n    info CND.reverse \" ^cli/browser@445-26^ process exiting; terminating browser process PID #{browser.pid} \"\n    browser.kill()\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nrun = ->\n  parse_arguments()\n  { server, host, port, } = await start_server()\n  { browser, }            = await start_browser { server, host, port, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_websocket = ( host, port, pid ) =>\n  url     = \"ws://#{host}:#{port}/terminals/#{pid}\"\n  WS      = require 'ws'\n  ws      = new WS.WebSocket url\n  ws.on 'open', () =>\n    urge \"^cli/demo_websocket@445-27^ websocket open at #{url}\"\n    # ws.send 'echo \"helo from server\"'\n  # ws.on 'message', ( data ) =>\n  #   if cfg.echo\n  #     process.stdout.write data # .toString()\n  return null\n\n\n############################################################################################################\ndo =>\n  # GUY.process.on_exit ->\n  #   info CND.reverse \" ^409-7^ process exiting \"\n  await run()\n\n"
  ]
}