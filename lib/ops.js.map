{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/ops.coffee"
  ],
  "names": [],
  "mappings": "AAIA;EAAA;AAAA,MAAA,SAAA,EAAA,mBAAA,EAAA,QAAA,EAAA;;EAGA,QAAA,GAAW,QAHX;;;EAOM,sBAAN,MAAA,oBAAA,CAAA;;;;;;;IAQE,GAAK,CAAE,MAAF,EAAU,GAAV,CAAA;MACH,QAAQ,CAAC,GAAT,CAAa,SAAb,EAAwB,GAAxB;AACA,aAAO,MAAM,CAAE,GAAF;IAFV,CANP;;;;;IAYE,GAAK,CAAA,GAAE,CAAF,CAAA;MACH,QAAQ,CAAC,GAAT,CAAa,SAAb,EAAwB,CAAxB;AACA,aAAO,QAAQ,CAAC,GAAT,CAAa,GAAA,CAAb;IAFJ;;EAdP,EAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmDA,UAAU,CAAC,OAAX,GAAsB,IAAI,KAAJ,CAAU,OAAV,EAAmB,IAAI,mBAAJ,CAAA,CAAnB;;EACtB,UAAU,CAAC,GAAX,GAAsB,OAAO,CAAC;;EAC9B,UAAU,CAAC,CAAX,GAAsB,OAAA,CAAQ,OAAR,EArDtB;;;EAuDA,SAAA,GAAsB,OAAA,CAAQ,WAAR;;EACtB,KAAA,GAAsB,EAxDtB;;;;;;;;;;;;;;;EAuEA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,IAAtB;;EACA,GAAA,CAAI,oBAAJ;AAxEA",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n_console = console\n\n\n#===========================================================================================================\nclass Intercepted_console\n\n  # #---------------------------------------------------------------------------------------------------------\n  # constructor: ( target ) ->\n  #   @target = target\n  #   return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  get: ( target, key ) ->\n    _console.log '^334-1^', key\n    return target[ key ]\n    # return Reflect.get arguments...\n\n  #---------------------------------------------------------------------------------------------------------\n  log: ( P... ) ->\n    _console.log '^334-2^', P\n    return _console.log P...\n\n  # debug:            ƒ debug()\n  # error:            ƒ error()\n  # info:             ƒ info()\n  # warn:             ƒ warn()\n\n  #---------------------------------------------------------------------------------------------------------\n  # assert:           ƒ assert()\n  # clear:            ƒ clear()\n  # context:          ƒ context()\n  # count:            ƒ count()\n  # countReset:       ƒ countReset()\n  # dir:              ƒ dir()\n  # dirxml:           ƒ dirxml()\n  # group:            ƒ group()\n  # groupCollapsed:   ƒ groupCollapsed()\n  # groupEnd:         ƒ groupEnd()\n  # memory:           MemoryInfo {totalJSHeapSize: 19300000, usedJSHeapSize: 19300000, jsHeapSizeLimit: 2190000000}\n  # profile:          ƒ profile()\n  # profileEnd:       ƒ profileEnd()\n  # table:            ƒ table()\n  # time:             ƒ time()\n  # timeEnd:          ƒ timeEnd()\n  # timeLog:          ƒ timeLog()\n  # timeStamp:        ƒ timeStamp()\n  # trace:            ƒ trace()\n\nglobalThis.console  = new Proxy console, new Intercepted_console()\nglobalThis.log      = console.log\nglobalThis.µ        = require 'mudom'\n# globalThis.XXTERM   = {};\nCombokeys           = require 'combokeys'\ncount               = 0\n# ckeys               = new Combokeys document.documentElement\n# ckeys               = new Combokeys µ.DOM.select_id 'terminal-container'\n# ckeys.bind 'ctrl+y', ( event, key ) -> log '^ops@756^', event\n# ckeys.bind 'ctrl+k', ( event, key ) ->\n#   log '^ops@756^', \"show or hide side bar\"\n#   event.preventDefault()\n#   event.stopPropagation()\n#   return false\n# ckeys.bind 'ctrl+l', ( event, key ) ->\n#   log '^ops@756^', \"activate address bar\"\n#   event.preventDefault()\n#   event.stopPropagation()\n#   return false\n\nconsole.log '^3938^', 'OK'\nlog \"^ops@1^ OPS loaded\"\n\n"
  ]
}